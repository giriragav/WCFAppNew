//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWCFClient.MyWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/MyWCF")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double m1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double m2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double m3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double m1 {
            get {
                return this.m1Field;
            }
            set {
                if ((this.m1Field.Equals(value) != true)) {
                    this.m1Field = value;
                    this.RaisePropertyChanged("m1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double m2 {
            get {
                return this.m2Field;
            }
            set {
                if ((this.m2Field.Equals(value) != true)) {
                    this.m2Field = value;
                    this.RaisePropertyChanged("m2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double m3 {
            get {
                return this.m3Field;
            }
            set {
                if ((this.m3Field.Equals(value) != true)) {
                    this.m3Field = value;
                    this.RaisePropertyChanged("m3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sid {
            get {
                return this.sidField;
            }
            set {
                if ((this.sidField.Equals(value) != true)) {
                    this.sidField = value;
                    this.RaisePropertyChanged("sid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyWCFService.IWCFServices")]
    public interface IWCFServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServices/GetTextData", ReplyAction="http://tempuri.org/IWCFServices/GetTextDataResponse")]
        string GetTextData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServices/GetTopper", ReplyAction="http://tempuri.org/IWCFServices/GetTopperResponse")]
        MyWCFClient.MyWCFService.Student[] GetTopper(MyWCFClient.MyWCFService.Student[] LS);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServicesChannel : MyWCFClient.MyWCFService.IWCFServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServicesClient : System.ServiceModel.ClientBase<MyWCFClient.MyWCFService.IWCFServices>, MyWCFClient.MyWCFService.IWCFServices {
        
        public WCFServicesClient() {
        }
        
        public WCFServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTextData() {
            return base.Channel.GetTextData();
        }
        
        public MyWCFClient.MyWCFService.Student[] GetTopper(MyWCFClient.MyWCFService.Student[] LS) {
            return base.Channel.GetTopper(LS);
        }
    }
}
